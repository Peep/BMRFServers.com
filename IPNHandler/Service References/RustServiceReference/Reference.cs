//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IPN.RustServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RustServiceReference.IRustService")]
    public interface IRustService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRustService/GetData", ReplyAction="http://tempuri.org/IRustService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRustService/GetData", ReplyAction="http://tempuri.org/IRustService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRustService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IRustService/GetDataUsingDataContractResponse")]
        Rust.CompositeType GetDataUsingDataContract(Rust.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRustService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IRustService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<Rust.CompositeType> GetDataUsingDataContractAsync(Rust.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRustService/DeployRustServer", ReplyAction="http://tempuri.org/IRustService/DeployRustServerResponse")]
        System.Collections.Generic.Dictionary<string, object> DeployRustServer(string identifier, int slots);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRustService/DeployRustServer", ReplyAction="http://tempuri.org/IRustService/DeployRustServerResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, object>> DeployRustServerAsync(string identifier, int slots);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRustServiceChannel : IPN.RustServiceReference.IRustService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RustServiceClient : System.ServiceModel.ClientBase<IPN.RustServiceReference.IRustService>, IPN.RustServiceReference.IRustService {
        
        public RustServiceClient() {
        }
        
        public RustServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RustServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RustServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RustServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public Rust.CompositeType GetDataUsingDataContract(Rust.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<Rust.CompositeType> GetDataUsingDataContractAsync(Rust.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public System.Collections.Generic.Dictionary<string, object> DeployRustServer(string identifier, int slots) {
            return base.Channel.DeployRustServer(identifier, slots);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, object>> DeployRustServerAsync(string identifier, int slots) {
            return base.Channel.DeployRustServerAsync(identifier, slots);
        }
    }
}
